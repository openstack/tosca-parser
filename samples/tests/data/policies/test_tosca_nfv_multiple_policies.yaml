tosca_definitions_version: tosca_simple_profile_for_nfv_1_0_0

description: sample-tosca-vnfd-scaling

imports:
  - tacker_defs.yaml
  - tacker_nfv_defs.yaml

metadata:
  template_name: sample-tosca-vnfd-scaling

topology_template:
  node_templates:
    VDU1:
      type: tosca.nodes.nfv.VDU.Tacker
      properties:
        image: cirros-0.3.4-x86_64-uec
        mgmt_driver: noop
        availability_zone: nova
        flavor: m1.tiny

    CP1:
      type: tosca.nodes.nfv.CP.Tacker
      properties:
        management: true
        order: 0
        anti_spoofing_protection: false
      requirements:
        - virtualLink:
            node: VL1
        - virtualBinding:
            node: VDU1
        # Added to pass the requirement validation
        # as the tosca.nodes.nfv.CP inherits from tosca.nodes.Port
        # This type was removed from the final version of the NFV profile
        - link: VL1
        - binding: VDU1

    VDU2:
      type: tosca.nodes.nfv.VDU.Tacker
      properties:
        image: cirros-0.3.4-x86_64-uec
        mgmt_driver: noop
        availability_zone: nova
        flavor: m1.tiny

    CP2:
      type: tosca.nodes.nfv.CP.Tacker
      properties:
        management: true
        order: 0
        anti_spoofing_protection: false
      requirements:
        - virtualLink:
            node: VL1
        - virtualBinding:
            node: VDU2
        # Added to pass the requirement validation
        # as the tosca.nodes.nfv.CP inherits from tosca.nodes.Port
        # This type was removed from the final version of the NFV profile
        - link: VL1
        - binding: VDU2
    VL1:
      type: tosca.nodes.nfv.VL
      properties:
        network_name: net_mgmt
        vendor: Tacker

  policies:
    - SP1:
        type: tosca.policies.tacker.Scaling
        targets: [VDU1]
        properties:
          increment: 1
          cooldown: 120
          min_instances: 1
          max_instances: 2
          default_instances: 1
          targets: [VDU1]

    - SP2:
        type: tosca.policies.tacker.Scaling
        targets: [VDU2]
        properties:
          increment: 1
          cooldown: 120
          min_instances: 1
          max_instances: 2
          default_instances: 1
          targets: [VDU2]

    - ALRM1:
        type: tosca.policies.tacker.Monitoring
        triggers:
            resize_compute:
                event_type:
                    type: tosca.events.resource.utilization
                    implementation: ceilometer
                condition:
                    constraint: 50
                    granularity: 600
                    evaluations: 1
                    aggregation_method: mean
                    resource_type: instance
                action:
                  resize_compute:
                    action_name: SP1
        properties:
            name: alrm1
            actions:
                resize_compute: "action_name: SP1"
